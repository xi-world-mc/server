services:
  minecraft:
    image: itzg/minecraft-server:java24
    container_name: minecraft
    tty: true
    stdin_open: true
    restart: unless-stopped
    ports: ["25565:25565"]
    env_file: [.env]
    volumes: [./minecraft:/data]
    networks: [default]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  backup:
    image: itzg/mc-backup
    container_name: backup
    restart: unless-stopped
    depends_on: [minecraft]
    env_file: .env
    volumes:
      - ./minecraft/world:/data:ro
      - ./minecraft/backups:/backups
    networks: [default]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports: ["80:80"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    depends_on: [bluemap]
    networks: [default]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  bluemap:
    image: ghcr.io/bluemap-minecraft/bluemap:v5.9
    container_name: bluemap
    restart: unless-stopped
    command: -r -u -w
    volumes:
      - ./minecraft/bluemap/bluemap-config:/app/config
      - ./minecraft/world:/app/world:ro
      - ./minecraft/world_nether:/app/world_nether:ro
      - ./minecraft/world_the_end:/app/world_the_end:ro
      - ./minecraft/bluemap/bluemap-data:/app/data
      - ./minecraft/bluemap/bluemap-web:/app/web
    depends_on: [minecraft]
    networks: [default]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  mc-exporter:
    image: itzg/mc-monitor:0.15.6
    container_name: mc_exporter
    restart: unless-stopped
    env_file: .env
    networks: [default]
    command: export-for-prometheus
    depends_on: [minecraft]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks: [default]
    env_file: .env
    volumes:
      - ./configurations/prometheus:/etc/prometheus
      - ./minecraft/prometheus:/prometheus
    user: "0"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: unless-stopped
    depends_on: [mc-exporter, node-exporter]
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks: [default]
    user: "0"
    volumes:
      - ./minecraft/grafana:/var/lib/grafana
      - ./configurations/grafana/provisioning:/etc/grafana/provisioning
      - ./configurations/grafana/dashboards:/etc/grafana/dashboards
    env_file: .env
    depends_on: [prometheus]
    restart: unless-stopped
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    networks: [default]
    env_file: .env
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    networks: [default]
    env_file: .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./minecraft/dozzle:/data
      - ./configurations/dozzle/users.yml:/data/users.yml
    restart: unless-stopped
    logging:
      driver: local
      options: { max-size: "10m", max-file: "3" }

networks:
  default:
    driver: bridge
